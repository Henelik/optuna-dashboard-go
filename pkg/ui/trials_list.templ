package ui

import (
    "strconv"

    "github.com/Henelik/optuna-dashboard-go/pkg/db"
)

templ trialsListPage(studyID uint, trialAnchor int) {
    {{
        trials, trialValues, err := getStudyTrials(studyID)
        if err != nil {
            return err
        }
    }}

    @header("Trials for study " + strconv.Itoa(int(studyID)))

    <body>
        <div class="container">
            @homeButton()
            <div class="container mt-4">
                <h2>Trials for study { studyID }</h2>
                @trialsList(trials, trialValues, trialAnchor)
            </div>
        </div>
    </body>
}

templ trialsList(trials []db.Trial, trialValues []db.TrialValue, trialAnchor int) {
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Trial Number</th>
                <th>State</th>
                <th>Objective Value</th>
                <th>Started</th>
                <th>Completed</th>
            </tr>
        </thead>
        <tbody>
            for _, trial := range trials {
                {{
                    style := ""
                    if trialAnchor >= 0 && trialAnchor == int(trial.Number) {
                        style = "background-color:#f8f900 !important;"
                    } 
                }}
                <tr id={strconv.Itoa(int(trial.Number))} style={style}>
                    <td>{strconv.Itoa(int(trial.Number))}</td>
                    <td>
                        switch trial.State {
                        case "RUNNING":
                            <span class="badge bg-primary">Running</span>
                        case "FAIL":
                            <span class="badge bg-danger">Failed</span>
                        case "COMPLETE":
                            <span class="badge bg-success">Complete</span>
                        default:
                            <span class="badge bg-secondary">{trial.State}</span>
                        }
                    </td>
                    <td>
                        for _, tv := range trialValues {
                            if tv.TrialID == trial.ID {
                                {strconv.FormatFloat(tv.Value, 'f', 6, 64)}
                            }
                        }
                    </td>
                    <td>{trial.Start.Format("2006-01-02 15:04:05")}</td>
                    <td>{trial.Complete.Format("2006-01-02 15:04:05")}</td>
                </tr>
            }
        </tbody>
    </table>
}
